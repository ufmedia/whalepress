name: Deploy to ECR

on:
  workflow_run:
    workflows: ["DISABLED"] #Change to "Create Release"
    types: [completed]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # Expose the tag we compute here as a job output
    outputs:
      image_tag: ${{ steps.semver.outputs.tag }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image name
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
          REPO_NAME=$(basename "${GITHUB_REPOSITORY}")
          echo "IMAGE_NAME=${ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${REPO_NAME}" >> $GITHUB_ENV

      - id: semver
        name: Fetch latest SemVer tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-creatordate \
            | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' \
            | head -n1)
          echo "VERSION_TAG=$TAG" >> $GITHUB_ENV
          # Expose for downstream jobs
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create auth.json
        run: |
          cat <<EOF > auth.json
          {
            "http-basic": {
              "connect.advancedcustomfields.com": {
                "username": "${{ secrets.ACF_EMAIL }}",
                "password": "${{ secrets.ACF_KEY }}"
              }
            }
          }
          EOF

      - name: Create .env file for Composer
        run: |
          cat <<EOF > .env
          GRAVITY_FORMS_KEY=${{ secrets.GRAVITY_FORMS_KEY }}
          RELEVANSSI_KEY=${{ secrets.RELEVANSSI_KEY }}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Cleanup sensitive files
        run: rm -f auth.json
