name: Deploy to GHCR

on:
  workflow_run:
    workflows: ["DISABLED"] #Change to "Create Release"
    types: [completed]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase image name
        run: |
          echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Fetch latest SemVer tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-creatordate | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "VERSION_TAG=$TAG" >> $GITHUB_ENV
      - name: Create auth.json
        run: |
          cat <<EOF > auth.json
          {
            "http-basic": {
              "connect.advancedcustomfields.com": {
                "username": "${{ secrets.ACF_EMAIL }}",
                "password": "${{ secrets.ACF_KEY }}"
              }
            }
          }
          EOF

      - name: Create .env file for Composer
        run: |
          cat <<EOF > .env
          GRAVITY_FORMS_KEY=${{ secrets.GRAVITY_FORMS_KEY }}
          RELEVANSSI_KEY=${{ secrets.RELEVANSSI_KEY }}
          EOF

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      - name: Clean up auth.json
        run: rm auth.json
      - name: Restore clean composer.json
        run: git checkout composer.json
